
axiomatic Padding {

  logic type padding
  
}

tag voidP = {
}

type voidP = [voidP]

tag charP = voidP with {
  int8 charM: 8;
}

tag unsigned_charP = {
  uint8 unsigned_charM: 8;
}

type unsigned_charP = [unsigned_charP]

uint32 distance(uint32 a, uint32 b)
  requires (_C_9 : true);
behavior default:
  assigns \nothing;
  ensures (_C_8 : ((\result :> integer) ==
                    (\integer_max((\at(a,Old) :> integer),
                                  (\at(b,Old) :> integer)) -
                      \integer_min((\at(a,Old) :> integer),
                                   (\at(b,Old) :> integer)))));
{  
   (var uint32 tmp);
   
   {  (if (_C_7 : (a > b)) then (_C_6 : (tmp = (_C_5 : ((_C_4 : (a - b)) :> uint32)))) else 
      (_C_3 : (tmp = (_C_2 : ((_C_1 : (b - a)) :> uint32)))));
      
      (return tmp)
   }
}
